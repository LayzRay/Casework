|RS_232
CLOCK_50 => CLOCK_50.IN1
KEY[0] => _.IN1
KEY[0] => frame[0].OUTPUTSELECT
KEY[0] => frame[1].OUTPUTSELECT
KEY[0] => frame[2].OUTPUTSELECT
KEY[0] => frame[3].OUTPUTSELECT
KEY[0] => frame[4].OUTPUTSELECT
KEY[0] => frame[5].OUTPUTSELECT
KEY[0] => frame[6].OUTPUTSELECT
KEY[0] => frame[7].OUTPUTSELECT
KEY[0] => data_to_code[0].OUTPUTSELECT
KEY[0] => data_to_code[1].OUTPUTSELECT
KEY[0] => data_to_code[2].OUTPUTSELECT
KEY[0] => data_to_code[3].OUTPUTSELECT
KEY[0] => data_to_code[4].OUTPUTSELECT
KEY[0] => data_to_code[5].OUTPUTSELECT
KEY[0] => data_to_code[6].OUTPUTSELECT
KEY[0] => data_to_code[7].OUTPUTSELECT
KEY[0] => sync_reg[0].ACLR
KEY[0] => sync_reg[1].ACLR
KEY[0] => sync_reg[2].ACLR
KEY[0] => KEY_presssed.ACLR
KEY[0] => tickCount[0].ACLR
KEY[0] => tickCount[1].ACLR
KEY[0] => tickCount[2].ACLR
KEY[0] => tickCount[3].ACLR
KEY[0] => tickCount[4].ACLR
KEY[0] => tickCount[5].ACLR
KEY[0] => tickCount[6].ACLR
KEY[0] => tickCount[7].ACLR
KEY[0] => tickCount[8].ACLR
KEY[0] => tickCount[9].ACLR
KEY[0] => tickCount[10].ACLR
KEY[0] => tickCount[11].ACLR
KEY[0] => tickCount[12].ACLR
KEY[0] => tickCount[13].ACLR
KEY[0] => tickCount[14].ACLR
KEY[0] => tickCount[15].ACLR
KEY[0] => tickCount[16].ACLR
KEY[0] => tickCount[17].ACLR
KEY[0] => tickCount[18].ACLR
KEY[0] => tickCount[19].ACLR
KEY[0] => tickCount[20].ACLR
KEY[0] => tickCount[21].ACLR
KEY[0] => tickCount[22].ACLR
KEY[0] => tickCount[23].ACLR
KEY[0] => tickCount[24].ACLR
KEY[0] => tickCount[25].ACLR
KEY[0] => tickCount[26].ACLR
KEY[0] => tickCount[27].ACLR
KEY[0] => tickCount[28].ACLR
KEY[0] => tickCount[29].ACLR
KEY[0] => tickCount[30].ACLR
KEY[0] => tickCount[31].ACLR
KEY[0] => data_counter[0].ACLR
KEY[0] => data_counter[1].ACLR
KEY[0] => data_counter[2].ACLR
KEY[0] => data_counter[3].ACLR
KEY[0] => first_frame.PRESET
KEY[0] => dataReady.ACLR
KEY[0] => state~7.DATAIN
KEY[0] => CLK_low.ENA
KEY[1] => sync_reg[2].DATAIN
UART_TXD <= Transmitter:T.tx


|RS_232|Transmitter:T
CLK_i => tx~reg0.CLK
CLK_i => CLK_low.CLK
CLK_i => tickCount[0].CLK
CLK_i => tickCount[1].CLK
CLK_i => tickCount[2].CLK
CLK_i => tickCount[3].CLK
CLK_i => tickCount[4].CLK
CLK_i => tickCount[5].CLK
CLK_i => tickCount[6].CLK
CLK_i => tickCount[7].CLK
CLK_i => tickCount[8].CLK
CLK_i => tickCount[9].CLK
CLK_i => tickCount[10].CLK
CLK_i => tickCount[11].CLK
CLK_i => tickCount[12].CLK
CLK_i => tickCount[13].CLK
CLK_i => tickCount[14].CLK
CLK_i => tickCount[15].CLK
CLK_i => tickCount[16].CLK
CLK_i => tickCount[17].CLK
CLK_i => tickCount[18].CLK
CLK_i => tickCount[19].CLK
CLK_i => tickCount[20].CLK
CLK_i => tickCount[21].CLK
CLK_i => tickCount[22].CLK
CLK_i => tickCount[23].CLK
CLK_i => tickCount[24].CLK
CLK_i => tickCount[25].CLK
CLK_i => tickCount[26].CLK
CLK_i => tickCount[27].CLK
CLK_i => tickCount[28].CLK
CLK_i => tickCount[29].CLK
CLK_i => tickCount[30].CLK
CLK_i => tickCount[31].CLK
CLK_i => bitCount[0].CLK
CLK_i => bitCount[1].CLK
CLK_i => bitCount[2].CLK
CLK_i => bitCount[3].CLK
CLK_i => rts~reg0.CLK
CLK_i => state~5.DATAIN
reset_n => tickCount[0].ACLR
reset_n => tickCount[1].ACLR
reset_n => tickCount[2].ACLR
reset_n => tickCount[3].ACLR
reset_n => tickCount[4].ACLR
reset_n => tickCount[5].ACLR
reset_n => tickCount[6].ACLR
reset_n => tickCount[7].ACLR
reset_n => tickCount[8].ACLR
reset_n => tickCount[9].ACLR
reset_n => tickCount[10].ACLR
reset_n => tickCount[11].ACLR
reset_n => tickCount[12].ACLR
reset_n => tickCount[13].ACLR
reset_n => tickCount[14].ACLR
reset_n => tickCount[15].ACLR
reset_n => tickCount[16].ACLR
reset_n => tickCount[17].ACLR
reset_n => tickCount[18].ACLR
reset_n => tickCount[19].ACLR
reset_n => tickCount[20].ACLR
reset_n => tickCount[21].ACLR
reset_n => tickCount[22].ACLR
reset_n => tickCount[23].ACLR
reset_n => tickCount[24].ACLR
reset_n => tickCount[25].ACLR
reset_n => tickCount[26].ACLR
reset_n => tickCount[27].ACLR
reset_n => tickCount[28].ACLR
reset_n => tickCount[29].ACLR
reset_n => tickCount[30].ACLR
reset_n => tickCount[31].ACLR
reset_n => bitCount[0].ACLR
reset_n => bitCount[1].ACLR
reset_n => bitCount[2].ACLR
reset_n => bitCount[3].ACLR
reset_n => rts~reg0.PRESET
reset_n => state~7.DATAIN
reset_n => tx~reg0.ENA
reset_n => CLK_low.ENA
dataReady => Selector3.IN3
dataReady => Selector1.IN1
dataReady => Selector2.IN2
data[0] => Mux0.IN7
data[1] => Mux0.IN6
data[2] => Mux0.IN5
data[3] => Mux0.IN4
data[4] => Mux0.IN3
data[5] => Mux0.IN2
data[6] => Mux0.IN1
data[7] => Mux0.IN0
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rts <= rts~reg0.DB_MAX_OUTPUT_PORT_TYPE


|RS_232|Coder_RS_232:CD
data_i[0] => WideXor0.IN4
data_i[0] => comb.IN1
data_i[0] => comb.IN1
data_i[0] => package_o[3].DATAIN
data_i[1] => WideXor0.IN5
data_i[1] => comb.IN1
data_i[1] => comb.IN1
data_i[1] => package_o[5].DATAIN
data_i[2] => WideXor0.IN6
data_i[2] => comb.IN1
data_i[2] => comb.IN1
data_i[2] => package_o[6].DATAIN
data_i[3] => comb.IN0
data_i[3] => comb.IN1
data_i[3] => comb.IN1
data_i[3] => WideXor0.IN7
data_i[3] => package_o[7].DATAIN
data_i[4] => WideXor0.IN8
data_i[4] => comb.IN1
data_i[4] => comb.IN0
data_i[4] => package_o[9].DATAIN
data_i[5] => WideXor0.IN9
data_i[5] => comb.IN1
data_i[5] => comb.IN0
data_i[5] => package_o[10].DATAIN
data_i[6] => comb.IN0
data_i[6] => comb.IN1
data_i[6] => comb.IN1
data_i[6] => WideXor0.IN10
data_i[6] => package_o[11].DATAIN
data_i[7] => WideXor0.IN11
data_i[7] => comb.IN1
data_i[7] => comb.IN1
data_i[7] => package_o[12].DATAIN
package_o[0] <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
package_o[1] <= comb.DB_MAX_OUTPUT_PORT_TYPE
package_o[2] <= comb.DB_MAX_OUTPUT_PORT_TYPE
package_o[3] <= data_i[0].DB_MAX_OUTPUT_PORT_TYPE
package_o[4] <= comb.DB_MAX_OUTPUT_PORT_TYPE
package_o[5] <= data_i[1].DB_MAX_OUTPUT_PORT_TYPE
package_o[6] <= data_i[2].DB_MAX_OUTPUT_PORT_TYPE
package_o[7] <= data_i[3].DB_MAX_OUTPUT_PORT_TYPE
package_o[8] <= comb.DB_MAX_OUTPUT_PORT_TYPE
package_o[9] <= data_i[4].DB_MAX_OUTPUT_PORT_TYPE
package_o[10] <= data_i[5].DB_MAX_OUTPUT_PORT_TYPE
package_o[11] <= data_i[6].DB_MAX_OUTPUT_PORT_TYPE
package_o[12] <= data_i[7].DB_MAX_OUTPUT_PORT_TYPE
package_o[13] <= <GND>
package_o[14] <= <GND>
package_o[15] <= <GND>


|RS_232|Data_memory:DM
A[0] => RAM.RADDR
A[1] => RAM.RADDR1
A[2] => RAM.RADDR2
A[3] => RAM.RADDR3
RD[0] <= RAM.DATAOUT
RD[1] <= RAM.DATAOUT1
RD[2] <= RAM.DATAOUT2
RD[3] <= RAM.DATAOUT3
RD[4] <= RAM.DATAOUT4
RD[5] <= RAM.DATAOUT5
RD[6] <= RAM.DATAOUT6
RD[7] <= RAM.DATAOUT7


